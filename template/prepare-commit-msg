#!/usr/bin/env dash

file="$1"    # Points to current git file that contains the commit log message.
inputMethod="$2"    # From where commit process is triggered
#  - message:  -m or -F option was given
#  - template: -t option was given, or config option commit.template is set
#  - merge:    the commit is a merge or a .git/MERGE_MSG file exists
#  - squash:   .git/SQUASH_MSG file exists
#  - commit:   -c, -C or --amend option was given
# hash="$3"    # Third is hash - but it is not used

# Only act if the user is creating/editing a new commit message.
if [ -n "$inputMethod" ]; then
    exit 0
fi

lastCommitMessages=$(git log --format=%s -2)
removeAfterLast=':'

# Get status & file listing | Output only staged files.
filesStatus=$(git status --porcelain=v1 --untracked-files='no' | rg '^\S')

### Main output: assemble text -> sed comments the first N lines -> removes tails from N-N lines -> erases second char in lines after N char

printf '%s\n%s\n\n%s\n' "$lastCommitMessages" "$lastCommitMessages" "$filesStatus" | sed -e '1,4s/^/# /; 3,4s/[^'"$removeAfterLast"']*$//; 6,$s/./ /2' > "$file"

exit 0
